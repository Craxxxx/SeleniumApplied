/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    //allure plugin 
    id 'io.qameta.allure' version '2.12.0'

    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //core selenium web driver
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.31.0'
    //auto driver management (optional)
    testImplementation 'io.github.bonigarcia:webdrivermanager:6.1.0' 

    //testNG
    testImplementation 'org.testng:testng:7.8.0'
    //allure testNG adapter
    testImplementation 'io.qameta.allure:allure-testng:2.29.1'

    //hamcrest for comparison
    testImplementation 'org.hamcrest:hamcrest:2.2'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.seleniumhq.selenium:selenium-java:4.31.0'
    implementation 'io.github.bonigarcia:webdrivermanager:6.1.0'


    //cucumberCore & testNG adapter
    testImplementation 'io.cucumber:cucumber-java:7.21.1'
    testImplementation 'io.cucumber:cucumber-testng:7.21.1'

    // Gherkin parser
    testImplementation 'io.cucumber:gherkin:30.0.0'

    //pico container
    testImplementation 'io.cucumber:cucumber-picocontainer:7.21.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'selenium.App'
}

task classicTest(type: Test) {
    useTestNG {
        suites 'src/test/resources/testing.xml' //traditional testNG suites
        listeners = ['io.qameta.allure.testng.AllureTestNg']
    }
     testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full" 
        showStandardStreams = true 
    }
}

task cucumberTest(type: Test) {
    useTestNG {
        // Point at your valid XML
        suites 'src/test/resources/cucumber.xml'
        listeners = ['io.qameta.allure.testng.AllureTestNg']
    }
     testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full" 
        showStandardStreams = true 
    }
}

tasks.named('test') {
    dependsOn classicTest, cucumberTest
}


// tasks.test {
//     useTestNG {
//         //suites 'src/test/resources/testing.xml'
//         listeners = ['io.qameta.allure.testng.AllureTestNg']
//     }
//      testLogging {
//         events "passed", "skipped", "failed"
//         exceptionFormat "full" 
//         showStandardStreams = true 
//     }
// }